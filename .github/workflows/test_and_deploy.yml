name: Build, test, upload (PyPI)

# Build on every branch push, tag push, and pull request change:
on:
  push:
    branches:
      - main
      - dev
  pull_request:
  workflow_dispatch:

jobs:
  build_wheel:
    name: Build wheel
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        shell: bash --noprofile --norc {0} # No automatic fail-fast
        run: |
          mkdir logs
          log=logs/wheel.log
          ./commands.sh pytest --small-scale --test-examples --test-extension all | tee $log
          res=${PIPESTATUS[0]}
          echo "[kgd-build-status] $res" >> $log
          exit $res
          
      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.build }}
          path: ./wheelhouse/*.whl
      - uses: actions/upload-artifact@v4
        if: ${{ always() && !cancelled() }}
        with:
          name: log-${{ matrix.build }}
          path: ./logs/*.log

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: |
          mkdir logs
          pipx run build --sdist 2>&1 | tee logs/sdist.log
          exit ${PIPESTATUS[0]}

      - uses: actions/upload-artifact@v4
        with:
          name: dist-sources
          path: dist/*.tar.gz
      - uses: actions/upload-artifact@v4
        if: ${{ always() && !cancelled() }}
        with:
          name: log-sources
          path: ./logs/*.log

  post_build:
    needs: [build_wheel, build_sdist]
    name: Post-build processing
    runs-on: ubuntu-latest
    if: ${{ always() && !cancelled() }}
    steps:
      - uses: actions/download-artifact@v4
        name: download sdist/wheels
        with:
          path: dist
          pattern: dist-*
          merge-multiple: true
          
      - uses: actions/download-artifact@v4
        name: download logs
        with:
          path: logs
          pattern: log-*
          merge-multiple: true

      - name: upload to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: always()
        with:
          user: __token__
          password: ${{ secrets.testpypi_password }}
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true

      - name: upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: "github.ref_name == 'main' && contains(github.event.head_commit.message, '[Release')"
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
